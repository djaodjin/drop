#!/bin/bash
#
# Configuration of an app instance (This requires a djaoapp AMI).

set -x
set -e

sysconfigFile=/var/www/djaoapp/etc/sysconfig/djagent

# download keys, certificates, etc.
{% if identities_url %}
/usr/bin/aws s3 cp {{identities_url}} / --recursive
{% endif %}

# recreates links for TLS certificates
if [ -d /etc/pki/tls/certs/archive ]; then
  for domain in `ls /etc/pki/tls/certs/archive` ; do
    chmod 600 /etc/pki/tls/certs/archive/$domain/privkey.pem
    mkdir -p /etc/pki/tls/certs/live/$domain
    pushd /etc/pki/tls/certs/live/$domain
    [ -e privkey.pem ] || ln -s ../../archive/$domain/privkey.pem
    [ -e fullchain.pem ] || ln -s ../../archive/$domain/fullchain.pem
  done
fi
if [ -d /etc/letsencrypt/archive ]; then
  for domain in `ls /etc/letsencrypt/archive` ; do
    chmod 600 /etc/letsencrypt/archive/$domain/privkey.pem
    mkdir -p /etc/letsencrypt/live/$domain
    pushd /etc/letsencrypt/live/$domain
    [ -e privkey.pem ] || ln -s ../../archive/$domain/privkey1.pem privkey.pem
    [ -e fullchain.pem ] || ln -s ../../archive/$domain/fullchain1.pem fullchain.pem
    [ -e cert.pem ] || ln -s ../../archive/$domain/cert1.pem cert.pem
    [ -e chain.pem ] || ln -s ../../archive/$domain/chain1.pem chain.pem
  done
fi

# Configures the agent
echo "QUEUE_URL={{queue_url}}" > ${sysconfigFile}
echo "LOGS_STORAGE_LOCATION={{logs_storage_location}}" >> ${sysconfigFile}
chmod 600 ${sysconfigFile}

# Restarts the agent
/usr/bin/systemctl disable djaoapp.service
/usr/bin/systemctl stop djaoapp.service
/usr/bin/systemctl start djagent.service
/usr/bin/systemctl enable djagent.service
